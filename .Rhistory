kymmendata <- read.table("d:/linmalsov/kymmen.txt, header=TRUE)
cor()
cor(kymmendata)
kymmendata <- read.table("d:/linmalsov/kymmen.txt", header=TRUE)
cor(kymmendata)
kymmendata <- read.table("d:/linmalsov/kymmen.txt", header=TRUE)
cor(kymmendata)
names(kymmendata)
X <- as.matrix(kymmen[,1:11]
rownames(x)
X <- as.matrix(kymmen[,1:11]
rownames(X)
X <- as.matrix(kymmen[1:11]
rownames(X)
kymmendata <- read.table("d:/linmalsov/kymmen.txt", header=TRUE)
kymmendata <- read.table("d:/linmalsov/kymmen.txt", header=TRUE, row.names = 1)
M <- as.matrix(kymmendata[,1:11])
corr(M)
cor(M)
dim(M)
plot(Pituush, Pisteet, xlab="pituushypyn pisteet", ylab="kokonaispisteet")
plot(kymmendata$Pituush, kymmendata$Pisteet, xlab="pituushypyn pisteet", ylab="kokonaispisteet")
malli <- lm(Pisteet ~ Pituush, data=kymmendata)
summary(malli)
malli1 <- lm(kymmendata$Pituush, kymmendata$Pisteet, xlab="pituushypyn pisteet", ylab="kokonaispisteet")
malli1 <- lm(kymmendata$Pituush, kymmendata$Pisteet)
malli1 <- lm(kymmendata$Pituush ~ kymmendata$Pisteet)
summary(malli1)
malli1 <- lm(kymmendata$Pisteet ~ kymmendata$Pituush)
summary(malli1)
abline(malli1)
abline(malli1, col="red")
malli3 <- lm(Pisteet ~ Kuula)
malli3 <- lm(kymmendata$Pisteet ~ kymmendata$Kuula)
summary (malli3)
names(kymmendata)
malli2 <- lm(Pisteet ~ X100m + Pituush + Kuula + Korkeus + X400m, data = kymmendata)
summary(malli2)
residuaalit = resid(malli2)
plot(density(residuaalit))
qqnorm(resid(m1))
qqnorm(resid(malli2))
residuaali = resid(malli2)
sovite = fitted(malli2)
cor(Pisteet, residuaali, sovite, X100m, Pituush, Kuula, Korkeus, X400m, data = kymmendata)
cor(Pisteet, residuaali, sovite, X100m, Pituush, Kuula, Korkeus, X400m)
cor(residuaali, sovite)
cor(residuaali, sovite, kymmendata$Pisteet, kymmendata$Pituush, kymmendata$Kuula, kymmendata$Korkeus, kymmendata$X400m)
cor(residuaali, sovite, kymmendata$Pisteet, kymmendata$Pituush, kymmendata$Kuula, kymmendata$Korkeus, kymmendata$X400m)
plot(malli2)
plot(malli2)
plot(sovite, kymmendata$Pisteet, xlab="sovite", ylab="vaste")
> abline(malli2, col="red")
abline(malli2, col="red")
abline(lm(sovite ~ kymmendata$Pisteet), col="red")
plot(sovite, kymmendata$Pisteet, xlab="sovite", ylab="kokonaispisteet")
abline(lm(sovite ~ kymmendata$Pisteet), col="red")
abline(lm(kymmendata$Pisteet ~ sovite), col="red")
plot(sovite, kymmendata$Pisteet, xlab="sovite", ylab="kokonaispisteet")
abline(lm(kymmendata$Pisteet ~ sovite), col="red")
plot(sovite, residuaali, xlab="sovite", ylab="residuaali")
abline(lm(residuaali ~ sovite), col="red")
plot(kymmendata$Kuula, residuaali, xlab="kuulan pisteet", ylab="residuaali")
abline(lm(residuaali ~ kymmendata$Kuula), col="red")
plot(kymmendata$Korkeus, residuaali, xlab="korkeushypyn pisteet", ylab="residuaali")
abline(lm(residuaali ~ kymmendata$Korkeus), col="red")
plot(kymmendata$X400m, residuaali, xlab="400m juoksun pisteet", ylab="residuaali")
abline(lm(residuaali ~ kymmendata$X400m), col="red")
plot(kymmendata$X100m, residuaali, xlab="400m juoksun pisteet", ylab="residuaali")
abline(lm(residuaali ~ kymmendata$X100m), col="red")
plot(kymmendata$X100m, residuaali, xlab="100m juoksun pisteet", ylab="residuaali")
abline(lm(residuaali ~ kymmendata$X100m), col="red")
plot(kymmendata$Korkeus, residuaali, xlab="korkeushypyn pisteet", ylab="residuaali")
abline(lm(residuaali ~ kymmendata$Korkeus), col="red")
par(mfrow(c(2,2))
plot(malli2)
par(mfrow=c(2,2))
plot(malli2)
hist(residuaali, breaks="FD", xlab="residuaali", main="residuaalihistogrammi")
par(mfrow=c(1,1))
hist(residuaali, breaks="FD", xlab="residuaali", main="residuaalihistogrammi")
ks.test(residuaali)
ks.test(residuaali, pnorm)
shapiro.test(residuaali)
qqnorm(residuaali)
qqline(residuaali)
cor(M)
summary(kymmendata)
summary(pituus$kymmendata)
summary(kymmendata$Pituus)
summary(kymmendata$Paino)
Pisteet         X100m          Pituush          Kuula          Korkeus          X400m           Aidat
Min.   :7649   Min.   :712.0   Min.   :725.0   Min.   :604.0   Min.   :689.0   Min.   :699.0   Min.   :726.0
1st Qu.:7690   1st Qu.:780.0   1st Qu.:806.0   1st Qu.:708.8   1st Qu.:769.0   1st Qu.:784.0   1st Qu.:824.5
Median :7812   Median :828.0   Median :836.0   Median :751.0   Median :804.0   Median :819.0   Median :849.5
Mean   :7843   Mean   :828.2   Mean   :840.2   Mean   :740.8   Mean   :805.9   Mean   :813.5   Mean   :852.9
3rd Qu.:7930   3rd Qu.:879.0   3rd Qu.:869.5   3rd Qu.:774.8   3rd Qu.:857.0   3rd Qu.:839.0   3rd Qu.:885.0
Max.   :8206   Max.   :932.0   Max.   :951.0   Max.   :924.0   Max.   :925.0   Max.   :938.0   Max.   :987.0
Kiekko          Seivas           Keihas          X1500m          Pituus        Paino
Min.   :607.0   Min.   : 780.0   Min.   :650.0   Min.   :378.0   Min.   :173   Min.   : 68.00
1st Qu.:716.5   1st Qu.: 859.0   1st Qu.:716.8   1st Qu.:503.8   1st Qu.:184   1st Qu.: 82.00
Median :747.0   Median : 909.0   Median :756.5   Median :558.0   Median :188   Median : 86.00
Mean   :747.5   Mean   : 900.3   Mean   :760.0   Mean   :554.6   Mean   :187   Mean   : 85.56
3rd Qu.:784.8   3rd Qu.: 932.0   3rd Qu.:794.8   3rd Qu.:605.8   3rd Qu.:190   3rd Qu.: 89.25
save.image("D:\\linmalsov\\H1")
q()
q()
mat <- read.table("./data/student-mat.csv", sep="/", header=TRUE)
mat <- read.table("./student-mat.csv", sep="/", header=TRUE)
mat <- read.table("/student-mat.csv", sep="/", header=TRUE)
mat <- read.table("student-mat.csv", sep="/", header=TRUE)
getwd()
setwd("./GitHub/IODS-project")
mat <- read.table("./data/student-mat.csv", sep="/", header=TRUE)
por <- read.table("./data/student-mat.csv", sep="/", header=TRUE)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by)
math_por <- inner_join(mat, por, by = join_by)
colnames(por)
mat <- read.table("./data/student-mat.csv", sep=";", header=TRUE)
por <- read.table("./data/student-mat.csv", sep=";", header=TRUE)
colnames(por)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
mat_por <- inner_join(mat, por, by = join_by)
colnames(mat)
str(por)
dim(por)
alc <- select(math_por, one_of(join_by))
colnames(alc)
math_por <- inner_join(mat, por, by = join_by)
alc <- select(math_por, one_of(join_by))
colnames(alc)
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'mat_por' with the same original name
two_columns <- select(mat_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
library(ggplot2)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
for(column_name in notjoined_columns) {
# select two columns from 'mat_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
glimpse(alc)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
alc <- mutate(alc, high_use = alc_use > 2)
glimpse(alc)
glimpse(alc)
dim(mat)
colnames(por)
dim(por)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(mat, por, by = join_by)
alc <- select(math_por, one_of(join_by))
colnames(alc)
dim(alc)
p
dim(alc)
math_por <- inner_join(mat, por, by = join_by, suffix = c(".mat", ".por"))
alc <- select(math_por, one_of(join_by))
dim(alc)
notjoined_columns <- colnames(mat)[!colnames(mat) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
glimpse(alc)
alc <- select(math_por, one_of(join_by))
dim(alc)
math_por <- inner.join(mat, por, by = join_by)
math_por <- inner_join(mat, por, by = join_by)
write.table(alc, file = "./data/alc.csv")
alcis <- read.table("./data/alc.csv", sep=";", header=TRUE)
glimpse(alcis)
write.csv(alc, file = "./data/alc.csv")
alcis <- read.table("./data/alc.csv", sep=";", header=TRUE)
glimpse(alcis)
alcis <- read.table("./data/alc.csv", sep=";", header=TRUE)
glimpse(alcis)
alcis <- read.csv("./data/alc.csv", sep=";", header=TRUE)
glimpse(alcis)
write.csv(alc, file = "./data/alc.csv")
alcis <- read.csv("./data/alc.csv", sep=";", header=TRUE)
glimpse(alcis)
alcis <- read.csv("./data/alc.csv", sep=",", header=TRUE)
glimpse(alcis)
notjoined_columns
glimpse(alc)
read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=";", header=TRUE)
data <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=";", header=TRUE)
data <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
column_name(data)
colnames(data)
summary(data)
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
g1 + geom_bar()
alc <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
colnames(data)
alc <- mutate(alc, alc_use = (Dalc + Walc) / 2)
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
g1 + geom_bar()
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
library(tidyr); library(dplyr); library(ggplot2)
install.packages(tidyr)
install.packages("tidyr")
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
library(tidyr); library(dplyr); library(ggplot2)
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
g2 + geom_boxplot() + ylab("absences") + ggtitle("Student absences by alcohol consumption and sex")
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g1 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
g1 + geom_boxplot() + ylab("absences") + ggtitle("Student absences by alcohol consumption and sex")
g2 <- ggplot(alc, aes(x = high_use, y = Medu, col = sex))
g2 + geom_boxplot() + ylab("mother's education") + ggtitle("Student absences by mother's education and sex")
g2 <- ggplot(alc, aes(x = Medu, y = high_use, col = sex))
g2 + geom_boxplot() + ylab("mother's education") + ggtitle("Alcohol consumption by student's mother's education adn sex")
g2 + geom_boxplot() + xlab("mother's education") + ggtitle("Alcohol consumption by student's mother's education adn sex")
g3 <- ggplot(alc, aes(x = high_use, y = paid, col = sex))
g3 + geom_boxplot() + ylab("paid extra classes") + ggtitle("Alcohol consumption by paid extra classes and sex")
g1 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
g1 + geom_boxplot() + ylab("absences") + ggtitle("Student absences by alcohol consumption and sex")
g2 <- ggplot(alc, aes(x = Medu, y = high_use, col = sex))
g2 + geom_boxplot() + xlab("mother's education") + ggtitle("Alcohol consumption by student's mother's education adn sex")
g2 <- ggplot(alc, aes(x = Medu, y = high_use, col = sex))
g2 + geom_boxplot() + xlab("mother's education") + ggtitle("Alcohol consumption by student's mother's education adn sex")
g2 <- ggplot(alc, aes(x = high_use, y = Medu, col = sex))
g2 + geom_boxplot() + xlab("high use") + ggtitle("Alcohol consumption by student's mother's education adn sex")
g3 <- ggplot(alc, aes(x = high_use, y = paid, col = sex))
g3 + geom_boxplot() + ylab("paid extra classes") + ggtitle("Alcohol consumption by paid extra classes and sex")
g3 <- ggplot(alc, aes(x = paid, y = high_use, col = sex))
g3 + geom_boxplot() + ylab("paid extra classes") + ggtitle("Alcohol consumption by paid extra classes and sex")
g2 + geom_boxplot() + xlab("high use") + ggtitle("Alcohol consumption by student's mother's education and sex")
g2
g2 <- ggplot(alc, aes(x = Medu, y = alc_use, col = sex))
g2
g2 + geom_bar()
g2 + geom_boxplot()
g2 + geom_line()
g2 + geom_bar()
g2 <- ggplot(alc, aes(x = Medu, y = alc_use, col = sex))
g2 + geom_bar(stat = "identity")
g2 + geom_boxplot()
g2 <- ggplot(alc, aes(x = Medu, y = alc_use))
g2 + geom_boxplot()
g2 <- ggplot(alc, aes(x = Medu, y = alc_use))
g2 + geom_bar()
g2 + geom_bar(stat = "identity")
g2 + geom_bar(stat = "bin")
g2 + geom_bar(stat = "identity")
table(Medu, alc_use)
table(alc$Medu, alc$alc_use)
crosstab(alc$Medu, alc$alc_use)
MA <-table(alc$Medu, alc$alc_use)
prop.table(MA)
prop.table(MA, 1)
install.packages("gmodels")
library(gmodels)
CrossTable(alc$Medu, alc$alc_use)
prop.table(MA, 1)
prop.table(MA)
MA
MA <-table(mother_education = alc$Medu, alcohol_usage alc$alc_use)
MA
MA <-table(mother_education = alc$Medu, alcohol_usage = alc$alc_use)
MA
MA <-table("mother's education" = alc$Medu, "alcohol usage" = alc$alc_use)
MA
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
table(high_use, paid)
table("paid extra classes" = alc$paid, "alcohol usage" = alc$alc_use)
m1 <- glm(high_use ~ Medu + paid + sex, data = alc, family = "binomial")
summary(m1)
coef(m)
coef(m1)
m1 <- glm(high_use ~ Medu + paid + sex + absences, data = alc, family = "binomial")
summary(m1)
coef(m1)
m2 <- glm(high_use ~ sex + absences, data = alc, family = "binomial")
summary(m2)
coef(m2)
OR <- coef(m2) %>% exp
CI <- confint(m2) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ sex + absences + famsup, data = alc, family = "binomial")
summary(m3)
m3 <- glm(high_use ~ sex + absences + famsup, data = alc, family = "binomial")
summary(m3)
m3 <- glm(high_use ~ sex + absences + studytime, data = alc, family = "binomial")
summary(m3)
g2 <- ggplot(alc, aes(x = Medu, y = alc_use))
g2 + geom_bar(stat = "identity")
g2 + geom_boxplot()
g2 <- ggplot(alc, aes(x = studytime, y = alc_use))
g3 <- ggplot(alc, aes(x = studytime, y = alc_use))
g3 + geom_boxplot()
g3 <- ggplot(alc, aes(x = studytime, y = alc_use, col = sex))
g3 + geom_boxplot()
g3 <- ggplot(alc, aes(x = studytime, y = alc_use, col = sex))
g3 + geom_bar()
g3 + geom_bar("identity")
g3 <- ggplot(alc, aes(x = studytime, y = alc_use, col = sex))
g3 + geom_bar("identity")
g3 <- ggplot(alc, aes(x = studytime, y = alc_use))
g3 + geom_bar("identity")
g2 <- ggplot(alc, aes(x = Medu, y = alc_use))
g2 + geom_boxplot()
g3 <- ggplot(alc, aes(x = alc_use, y = studytime))
g3 + geom_bar("identity")
colnames(data)
g3 <- ggplot(alc, aes(x = alc_use, y = studytime))
g3 + geom_boxplot()
g3 <- ggplot(alc, aes(x = alc_use, y = studytime, group = sex))
g3 + geom_boxplot()
g2 <- ggplot(alc, aes(x = Medu, y = high_use))
g2 + geom_boxplot()
g2 <- ggplot(alc, aes(x = high_use, y = Medu, col = sex))
g2 + geom_boxplot()
g3 <- ggplot(alc, aes(x = high_use, y = studytime, col = sex))
g3 + geom_boxplot()
View(mat_por)
m3 <- glm(high_use ~ sex + absences + studytime, data = alc, family = "binomial")
summary(m3)
OR <- coef(m3) %>% exp
CI <- confint(m3) %>% exp
cbind(OR, CI)
colnames(data)
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# define the plot as a bar plot and draw it
g1 + geom_bar()
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# define the plot as a bar plot and draw it
g1 + geom_boxplot()
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use))
# define the plot as a bar plot and draw it
g1 + geom_bar()
# access the tidyverse libraries tidyr, dplyr, ggplot2
library(tidyr); library(dplyr); library(ggplot2)
# draw a bar plot of each variable
gather(alc) %>% ggplot(aes(value)) + facet_wrap("key", scales = "free") + geom_bar()
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
g1 + geom_bar()
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# define the plot as a bar plot and draw it
g1 + geom_bar()
# initialise a plot of high_use and absences
g1 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
# define the plot as a boxplot and draw it
g1 + geom_boxplot() + ylab("absences") + ggtitle("Student absences by alcohol consumption and sex")
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# define the plot as a bar plot and draw it
g1 + geom_bar() gtitle("Alcohol consumption and sex")
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# define the plot as a bar plot and draw it
g1 + geom_bar() + gtitle("Alcohol consumption and sex")
# initialize a plot of alcohol use
g1 <- ggplot(data = alc, aes(x = alc_use, fill = sex))
# define the plot as a bar plot and draw it
g1 + geom_bar() + ggtitle("Alcohol consumption and sex")
# initialise a plot of high_use and absences
g1 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
library(tidyr); library(dplyr); library(ggplot2)
# initialise a plot of high_use and absences
g1 <- ggplot(alc, aes(x = high_use, y = absences, col = sex))
g2 <- ggplot(alc, aes(x = high_use, y = Medu, col = sex))
p <- ggplot(alc, Medu)
alc <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/alc.txt", sep=",", header=TRUE)
p <- ggplot(alc, Medu)
p + geom_bar()
p <- ggplot(alc, Medu)
p <- ggplot(alc, aes(x = Medu))
p + geom_bar()
